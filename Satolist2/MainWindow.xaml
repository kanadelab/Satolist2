<UserControl x:Class="Satolist2.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:ctl="clr-namespace:Satolist2.Control"
		xmlns:util="clr-namespace:Satolist2.Utility"
		xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
		mc:Ignorable="d"
		 DragEnter="MainWindow_DragEnter" Drop="MainWindow_Drop" >
	<UserControl.InputBindings>
		<KeyBinding Gesture="CTRL+S" Command="{Binding SaveFileCommand}" />
		<KeyBinding Gesture="CTRL+ALT+R" Command="{Binding ReloadShioriCommand}" />
		<KeyBinding Gesture="CTRL+SHIFT+F" Command="{Binding ShowSearchBoxCommand}" />
		<KeyBinding Gesture="CTRL+ALT+G" Command="{Binding BootSSPCommand}" />
	</UserControl.InputBindings>
	<UserControl.Resources>
		<ResourceDictionary>
			<BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="auto" />
		</Grid.RowDefinitions>

		<Menu Grid.Row="0">
			<MenuItem Header="ファイル">
				<MenuItem Header="上書き保存" Command="{Binding SaveFileCommand}" InputGestureText="Ctrl+S"/>
				<MenuItem Header="開き直す" Command="{Binding ReopenGhostCommand}" />
				<Separator />
				<MenuItem Header="里々の辞書ファイルを追加" Command="{Binding AddSatoriDictionaryFileCommand}" />
				<MenuItem Header="テキストファイルを追加" Command="{Binding AddTextFileCommand}" />
				<Separator />
				<MenuItem Header="ゴーストのフォルダを開く" Command="{Binding OpenGhostDirectoryCommand}" />
				<MenuItem Header="ゴーストの辞書フォルダを開く" Command="{Binding OpenGhostDictionaryDirectoryCommand}" />
				<MenuItem Header="ゴーストのシェルフォルダを開く" Command="{Binding OpenGhostShellDirectoryCommand}" />
				<Separator/>
				<MenuItem Header="ゴーストをSSPで起動" Command="{Binding BootSSPCommand}" InputGestureText="Ctrl+Alt+G" />
				<Separator />
				<MenuItem Header="ゴーストを新規作成" Command="{Binding NewGhostCommand}" />
			</MenuItem>
			<MenuItem Header="編集">
				<MenuItem Header="サーフェスプレビュー画像を再生成" Command="{Binding GenerateSurfacePreviewCommand}" />
				<MenuItem Header="プレビューに使用するシェル" ItemsSource="{Binding SurfacePreview.Shells}" IsEnabled="{Binding SurfacePreview.IsExistsShell,FallbackValue=False}" x:Name="PreviewShellSelector">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="MenuItem">
							<Setter Property="Header" Value="{Binding ShellName}" />
							<Setter Property="IsChecked" Value="{Binding IsSelected}" />
							<Setter Property="Command" Value="{Binding DataContext.SelectPreviewShellCommand, ElementName=PreviewShellSelector}" />
							<Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}" />
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<MenuItem Header="プレビューするシェルを直接選択" Command="{Binding SelectPreviewShellDirectoryCommand}" />
				<Separator />
				<MenuItem Header="ゴーストの里々をアップデート" Command="{Binding UpdateSatoriCommand}" />
			</MenuItem>
			<MenuItem Header="表示">
				<MenuItem Header="ファイルイベントツリー" x:Name="FileEventTreeVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="単語群・文リスト" x:Name="EventListVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="検索" x:Name="SearchMenuVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" InputGestureText="Ctrl+Shift+F" />
				<MenuItem Header="検索結果" x:Name="SearchResultVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="サーフェスビューワ" x:Name="SurfaceViewerVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="サーフェスパレット" x:Name="SurfacePaletteVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="デバッグメニュー" x:Name="DebugMainMenuVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="スタートメニュー" x:Name="StartMenuVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="ゴーストプロパティ" x:Name="GhostDescriptEditorVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}"/>
				<MenuItem Header="インストール設定" x:Name="GhostInstallEditorVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="更新除外設定" x:Name="UpdateIgnoreListVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="SAORIリスト" x:Name="SaoriListVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="文字置換リスト" x:Name="ReplaceListVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="変数リスト" x:Name="VariableListVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="れしばイベントログ" x:Name="RecvEventLogVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="挿入パレット" x:Name="InsertPaletteVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="さとりて" x:Name="SatoriteVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="Ukadocイベントリファレンス" x:Name="UkadocEventReferenceVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<MenuItem Header="ヘルプ(試験的)" x:Name="HelpViewerVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<Separator />
				<MenuItem Header="RuntimeBased SurfaceViewer" x:Name="RuntimeBasedSurfaceViewerVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				<Separator />
				<MenuItem Header="さとりすと1.x互換機能" Visibility="{Binding IsEnabledLegacyCompat, Converter={StaticResource BoolToVisibilityConverter}}">
					<MenuItem Header="サーフェスビューワ" x:Name="LegacySurfaceViewerVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
					<MenuItem Header="サーフェスパレット" x:Name="LegacySurfacePaletteVisibleMenu" IsCheckable="True" IsChecked="{Binding IsVisible, Mode=TwoWay}" />
				</MenuItem>
				<Separator />
				<MenuItem Header="ウインドウレイアウトをデフォルトに戻す" Command="{Binding ResetDockingLayoutCommand}" />
			</MenuItem>
			<MenuItem Header="デバッグ">
				<MenuItem Header="起動中のゴーストの辞書をリロード" Command="{Binding ReloadShioriCommand}" InputGestureText="Ctrl+Alt+R" />
				<Separator />
				<MenuItem Header="FMOをダンプ" Command="{Binding DumpFMOCommand}" />
			</MenuItem>
			<MenuItem Header="更新">
				<MenuItem Header="narファイル作成" Command="{Binding ExportNarCommand}" />
				<MenuItem Header="更新ファイル作成" Command="{Binding MakeUpdateFileCommand}" />
				<Separator />
				<MenuItem Header="サーバにファイルをアップロード" Command="{Binding UploadGhostCommand}" />
			</MenuItem>
			<MenuItem Header="オプション">
				<MenuItem Header="基本設定" Command="{Binding EditGeneralSettingsCommand}" />
				<MenuItem Header="挿入メニューのカスタマイズ" Command="{Binding EditInsertPaletteCommand}" />
				<MenuItem Header="アップロード設定" Command="{Binding EditUploadSettingCommand}" />
				<MenuItem Header="テキストエディタのフォント設定" Command="{Binding EditTextEditorFontCommand}" />
				<Separator />
				<MenuItem Header="さとりすと本体フォルダを開く" Command="{Binding OpenSatolistDirectoryCommand}" />
			</MenuItem>
		</Menu>

		<avalonDock:DockingManager Grid.Row="1" AllowMixedOrientation="True" x:Name="DockingManager" >

			<!--
			<avalonDock:DockingManager.Theme>
				<avalonDock:Vs2013DarkTheme/>
			</avalonDock:DockingManager.Theme>
			-->

			<avalonDock:LayoutRoot>

				<avalonDock:LayoutPanel Orientation="Vertical">
					<avalonDock:LayoutPanel Orientation="Horizontal">

						<!--左ペイン-->
						<avalonDock:LayoutAnchorablePane DockWidth="200">

							<!--ファイルイベントツリー-->
							<util:DockingWindow x:Name="FileEventTree">
								<ctl:FileEventTree />
							</util:DockingWindow>

						</avalonDock:LayoutAnchorablePane>

						<!--ドキュメントペイン-->
						<avalonDock:LayoutDocumentPane CanRepositionItems="True" >

							<!--スタートメニュー-->
							<util:DockingWindow x:Name="StartMenu">
								<ctl:StartMenu />
							</util:DockingWindow>

							<!--デバッグメニュー-->
							<util:DockingWindow x:Name="DebugMainMenu">
								<ctl:DebugMainMenu />
							</util:DockingWindow>

							<!--ゴーストプロパティ-->
							<util:DockingWindow x:Name="GhostDescriptEditor">
								<ctl:GhostDescriptEditor />
							</util:DockingWindow>

							<!--インストール設定-->
							<util:DockingWindow x:Name="GhostInstallEditor">
								<ctl:GhostDescriptEditor />
							</util:DockingWindow>

							<!--更新除外設定-->
							<util:DockingWindow x:Name="UpdateIgnoreList">
								<ctl:UpdateIgnoreList />
							</util:DockingWindow>

							<!--SAORIリスト-->
							<util:DockingWindow x:Name="SaoriList">
								<ctl:SaoriList />
							</util:DockingWindow>

							<!--文字置換リスト-->
							<util:DockingWindow x:Name="ReplaceList">
								<ctl:ReplaceList />
							</util:DockingWindow>

							<!--変数リスト-->
							<util:DockingWindow x:Name="VariableList">
								<ctl:VariableList />
							</util:DockingWindow>

							<!--検索-->
							<util:DockingWindow x:Name="SearchMenu">
								<ctl:SearchMenu />
							</util:DockingWindow>

							<!--れしばイベントログ-->
							<util:DockingWindow x:Name="RecvEventLog">
								<ctl:RecvEventLog />
							</util:DockingWindow>
							
							<!--ヘルプ-->
							<util:DockingWindow x:Name="HelpViewer">
								<ctl:HelpViewer />
							</util:DockingWindow>
							
						</avalonDock:LayoutDocumentPane>

						<!--右ペイン-->
						<avalonDock:LayoutAnchorablePane DockWidth="300">
							<!--サーフェスビューワ-->
							<util:DockingWindow x:Name="SurfaceViewer">
								<ctl:SurfaceViewer />
							</util:DockingWindow>
							
							<!--旧サーフェスビューワ-->
							<util:DockingWindow x:Name="LegacySurfaceViewer">
								<ctl:LegacyControlHost />
							</util:DockingWindow>

							<!--旧サーフェスパレット-->
							<util:DockingWindow x:Name="LegacySurfacePalette">
								<ctl:LegacyControlHost />
							</util:DockingWindow>

							<!--サーフェスパレット-->
							<util:DockingWindow x:Name="SurfacePalette">
								<ctl:SurfacePalette />
							</util:DockingWindow>
							
							<!--挿入パレット-->
							<util:DockingWindow x:Name="InsertPalette">
								<ctl:InsertPalette />
							</util:DockingWindow>

							<!--ランタイムベースサーフェスビューワ-->
							<util:DockingWindow x:Name="RuntimeBasedSurfaceViewer">
								<ctl:RuntimeBasedSurfaceViewer />
							</util:DockingWindow>
							
						</avalonDock:LayoutAnchorablePane>

					</avalonDock:LayoutPanel>

					<!--下ペイン-->
					<avalonDock:LayoutAnchorablePane DockHeight="250">

						<!-- 単語群・文リスト-->
						<util:DockingWindow x:Name="EventList">
							<ctl:EventList />
						</util:DockingWindow>

						<!--検索結果-->
						<util:DockingWindow x:Name="SearchResult">
							<ctl:SearchResult />
						</util:DockingWindow>
						
						<!--さとりて-->
						<util:DockingWindow x:Name="Satorite">
							<ctl:SatoriteWindow />
						</util:DockingWindow>

						<!--Ukadocイベントリファレンス-->
						<util:DockingWindow x:Name="UkadocEventReference">
							<ctl:ShioriEventReference />
						</util:DockingWindow>

					</avalonDock:LayoutAnchorablePane>

				</avalonDock:LayoutPanel>
			</avalonDock:LayoutRoot>
		</avalonDock:DockingManager>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			
			<Button Grid.Column="0" Command="{Binding ShowLogMessageCommand}" VerticalAlignment="Center" Margin="3" MaxHeight="20">
				<Button.Template>
					<ControlTemplate>
						<Grid>
							<Rectangle Fill="Transparent" />
							<StackPanel Orientation="Horizontal" Margin="5 3 0 3">
								<Path Fill="White" Stretch="Uniform" Data="{StaticResource LogMessageIcon}" VerticalAlignment="Center" MaxHeight="18" />
								<TextBlock Margin="6 0 0 0" Text="{Binding LogMessage.NewestLogMessage.Message}" Foreground="White" VerticalAlignment="Center"/>
							</StackPanel>
						</Grid>
					</ControlTemplate>
				</Button.Template>
			</Button>

			<Button Grid.Column="1" VerticalAlignment="Center" Margin="3" MaxHeight="20" Foreground="White" Command="{Binding NetworkUpdateCommand}"
					Visibility="{Binding IsUpdateAvailable, Converter={StaticResource BoolToVisibilityConverter}}">
				<Button.Template>
					<ControlTemplate>
						<Grid>
							<Rectangle Fill="Transparent" />
							<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
								<TextBlock Text="アップデートがあります(" />
								<TextBlock Text="{Binding UpdateVersionLabel}" />
								<TextBlock Text=")" Margin="0 0 5 0" />
								<Path Fill="White" Data="{StaticResource SatolistUpdateIcon}" Stretch="Uniform" MaxHeight="18" Margin="0 0 5 0" />
							</StackPanel>
						</Grid>
					</ControlTemplate>
				</Button.Template>
			</Button>
			
			<Popup x:Name="LogPopup" StaysOpen="False" Placement="Top">
				<StackPanel >
					<Menu>
						<MenuItem Header="ログをクリア" Command="{Binding ClearLogMessageCommand}" />
					</Menu>
					<Separator/>
					<ListView ItemsSource="{Binding LogMessage.LogItems}" DisplayMemberPath="Message"
									ScrollViewer.VerticalScrollBarVisibility="Visible"
									Width="600" Height="200" x:Name="LogList">
					</ListView>
				</StackPanel>
			</Popup>
			<Grid.Style>
				<Style TargetType="Grid">
					<Setter Property="Background" Value="#007ACC" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding LogMessage.NewestLogMessage.Type}" Value="Error">
							<Setter Property="Background" Value="DarkRed" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>
	</Grid>
</UserControl>
